{"version":3,"sources":["actions/types.js","actions/projectActions.js","Components/Project/AddProject.js","securityUtils/setJWTToken.js","actions/securityActions.js","Components/Layout/Header.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/profileReducer.js","reducers/index.js","store.js","Components/Project/UpdateProject.js","Components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","Components/ProjectBoard/Backlog.js","Components/ProjectBoard/ProjectBoard.js","Components/ProjectBoard/ProjectTasks/AddProjectTask.js","Components/Project/ProjectItem.js","Components/Project/CreateProjectButton.js","Components/Dashboard.js","Components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","Components/Layout/Landing.js","Components/Authentication/Register.js","Components/Authentication/Login.js","securityUtils/SecuredRoute.js","Components/Profile/Profile.jsx","actions/profileActions.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","clearErrors","AddProject","props","onChange","event","setState","target","name","value","onSubmit","preventDefault","newProject","projectName","state","projectIdentifier","description","start_date","end_date","errors","nextProps","this","className","classnames","placeholder","Component","connect","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","Fragment","Nav","Link","to","userIsAuthenticated","icon","faUserCircle","fullname","onClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","initialState","projects","teamProjects","userNames","teamMembers","projectTasks","projectTask","checkValidToken","combineReducers","action","filter","backlog","projectSequence","userDetail","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updatedProject","match","params","getProject","disabled","get","res","ProjectTask","onDeleteButtonClick","backlogId","projectTaskSequence","deleteProjectTask","priorityString","priorityClassName","priority","summary","acceptanceCriteria","backlog_id","project_task_sequence","confirm","delete","Backlog","tasks","map","key","toDoItems","inProgressItems","onReviewItems","doneItems","i","length","status","ProjectBoard","onSearchQueryChange","charAt","getUsersForSearchQuery","suggestions","resetSearchedUsernames","addUserToTeamOnClick","username","addUserToTeam","showFindTeamMemberModel","searchQuery","renderSuggestions","e","showTeamModel","nextProp","getBacklog","getProjectTeamMembers","BoardContent","projectNotFound","role","boardValidator","faPlusCircle","Button","faUsers","Modal","size","aria-labelledby","centered","show","Title","Body","Footer","Row","Col","teamMember","ListGroup","Item","protoTypes","PropTypes","object","isRequired","func","array","query","projectId","AddProjectTask","newTask","dueDate","addProjectTask","project_task","ProjectItem","onDeleteClick","deleteProject","faFlagCheckered","faEdit","faMinusCircle","CreateProjectButton","Dashboard","toggleTab","eventKey","activeKey","getProjects","getTeamProjects","Tabs","defaultActiveKey","Tab","title","UpdateProjectTask","updatedTask","ptId","updateProjectTask","createdBy","getProjectTask","updatedProjectTask","patch","Landing","Register","newUser","password","confirmPassword","createNewUser","Login","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","Profile","handleClose","fullnameToChange","passwordToChange","modalInputName","modalValue","modalText","handleShow","text","changePassword","updateDetail","inputType","updateFullname","updatePassword","created_at","last_login","message","getProfileDetails","projectList","md","Container","fluid","error","success","onHide","closeButton","Form","Label","Control","put","console","log","jwtToken","decodedToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.544027a6.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_TEAM_PROJECTS = \"GET_TEAM_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\nexport const GET_USERNAMES = \"GET_USERNAMES\";\r\nexport const GET_TEAM_MEMBERS = \"GET_TEAM_MEMBERS\";\r\n\r\n//Backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK \";\r\n\r\n//profile\r\nexport const GET_USER_DETAILS = \"GET_USER_DETAILS \";\r\n\r\n//Username\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\n//Security\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER \";","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROJECTS,\r\n  GET_PROJECT,\r\n  DELETE_PROJECT,\r\n  GET_TEAM_PROJECTS,\r\n  GET_USERNAMES,\r\n  GET_TEAM_MEMBERS\r\n} from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project/\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getTeamProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/teamProjects/\");\r\n  dispatch({\r\n    type: GET_TEAM_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => dispatch => {\r\n  dispatch({\r\n    type: GET_ERRORS,\r\n    payload: {}\r\n  });\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Do you want to delete the project?\")) {\r\n    try {\r\n      await axios.delete(`/api/project/${id}`);\r\n      dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getUsersForSearchQuery = query => async dispatch => {\r\n  const res = await axios.get(`/api/users/searchQuery/${query}`);\r\n  dispatch({\r\n    type: GET_USERNAMES,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const resetSearchedUsernames = () => dispatch => {\r\n  dispatch({\r\n    type: GET_USERNAMES,\r\n    payload: []\r\n  });\r\n};\r\n\r\nexport const addUserToTeam = (projectId, username) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `Do you want to add the user '${username}' to your project '${projectId}'?`\r\n    )\r\n  ) {\r\n    try {\r\n      const res = await axios.get(\r\n        `/api/project/${projectId}/team/add/${username}`\r\n      );\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const getProjectTeamMembers = (projectId) => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.get(`/api/project/${projectId}/team`);\r\n        dispatch({\r\n            type: GET_TEAM_MEMBERS,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames'\r\n\r\nclass AddProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  //Life cycle hooks\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors})\r\n    }\r\n  }\r\n  \r\n\r\n  onChange = (event) => {\r\n      this.setState({ [event.target.name] : event.target.value });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newProject = {\r\n        projectName: this.state.projectName,\r\n        projectIdentifier: this.state.projectIdentifier,\r\n        description: this.state.description,\r\n        start_date: this.state.start_date,\r\n        end_date: this.state.end_date\r\n      }\r\n      this.props.createProject(newProject, this.props.history)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {errors} = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Project Name\"\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Unique Project ID\"\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.start_date}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.end_date}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors : state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProject }) (AddProject);\r\n","import axios from \"axios\"\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken  from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n\r\n    try{\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : {}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (LoginRequest) => async dispatch => {\r\n\r\n    try {\r\n        //post login request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);        \r\n        //extract token from res.data\r\n        const {token} = res.data;\r\n        //store the token\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        //set token in the header\r\n        setJWTToken(token);\r\n        //decode token\r\n        const decoded = jwt_decode(token);\r\n        //dispatch to security reducer\r\n        dispatch({\r\n            type : SET_CURRENT_USER,\r\n            payload : decoded\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        }) \r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type : SET_CURRENT_USER,\r\n        payload : {}\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../actions/securityActions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, NavDropdown, Navbar } from \"react-bootstrap\";\r\n\r\nclass Header extends Component {\r\n    \r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const { validToken, user } = this.props.security;\r\n\r\n        const userIsNotAuthenticated = (\r\n          <React.Fragment>\r\n          <Nav className=\"mr-auto\"></Nav>\r\n          <Nav>\r\n            <Nav.Link>\r\n              <Link className=\"nav-link \" to=\"/register\">\r\n                Sign up\r\n              </Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </Nav.Link>\r\n          </Nav>\r\n          </React.Fragment>\r\n        );\r\n\r\n        const userIsAuthenticated = (\r\n          <React.Fragment>\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link>\r\n              <Link className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n              </Link>\r\n            </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n            <Nav.Link>\r\n              <Link className=\"nav-link \" to=\"/profile\">\r\n                {<FontAwesomeIcon icon={faUserCircle} />}\r\n                {` ${user.fullname}`}\r\n              </Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link onClick={this.logout} className=\"nav-link\" to=\"/logout\">\r\n                Logout\r\n              </Link>\r\n            </Nav.Link>\r\n          </Nav>\r\n          </React.Fragment>\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if (validToken && user) {\r\n          headerLinks = userIsAuthenticated;\r\n        } else {\r\n          headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n              <Navbar.Brand href=\"/\">Project Management Tool</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                {headerLinks}\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout : PropTypes.func.isRequired,\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (Header);","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch (action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT, GET_TEAM_PROJECTS, GET_USERNAMES, GET_TEAM_MEMBERS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  teamProjects: [],\r\n  project: {},\r\n  userNames : [],\r\n  teamMembers : []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_TEAM_PROJECTS:\r\n      return {\r\n        ...state,\r\n        teamProjects: action.payload\r\n      }\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter( project => project.projectIdentifier !== action.payload )\r\n      };\r\n    case GET_USERNAMES:\r\n        return {\r\n          ...state,\r\n          userNames: action.payload\r\n      };\r\n    case GET_TEAM_MEMBERS:\r\n      return {\r\n        ... state,\r\n        teamMembers: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projectTasks : [],\r\n    projectTask : {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch (action.type){\r\n\r\n        case GET_BACKLOG:\r\n        return {\r\n            ...state,\r\n            projectTasks : action.payload\r\n        }\r\n\r\n        case GET_PROJECT_TASK:\r\n        return {\r\n            ...state,\r\n            projectTask : action.payload\r\n        }\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTasks : state.projectTasks.filter(projectTask => projectTask.projectSequence !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user : {},\r\n    validToken : false\r\n}\r\n\r\nconst checkValidToken = (payload) => {\r\n    if(payload){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken : checkValidToken(action.payload),\r\n                user : action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_USER_DETAILS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_USER_DETAILS:\r\n            return action.payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\nimport profileReducer from './profileReducer';\r\n\r\nexport default combineReducers({\r\n    errors : errorReducer,\r\n    project : projectReducer,\r\n    backlog : backlogReducer,\r\n    security : securityReducer,\r\n    userDetail : profileReducer\r\n});","import {createStore,  applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    )\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware)\r\n        )\r\n    )\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames'\r\n\r\n\r\nclass UpdateProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id : \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    //console.log(id);\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors});\r\n    }\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name] : event.target.value });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n      event.preventDefault();\r\n      const updatedProject = {\r\n        id : this.state.id,\r\n        projectName : this.state.projectName,\r\n        projectIdentifier : this.state.projectIdentifier,\r\n        description : this.state.description,\r\n        start_date : this.state.start_date,\r\n        end_date : this.state.end_date\r\n      }\r\n      this.props.createProject(updatedProject, this.props.history)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { errors } = this.state;\r\n    return (\r\n      \r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\" : errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\"\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProjectTask extends Component {\r\n\r\n  onDeleteButtonClick = (backlogId, projectTaskSequence) => {\r\n      this.props.deleteProjectTask(backlogId, projectTaskSequence);\r\n    }\r\n\r\n    render() {\r\n        const { projectTask } = this.props\r\n\r\n        let priorityString;\r\n        let priorityClassName;\r\n\r\n        if(projectTask.priority === 1){\r\n          priorityClassName = \"bg-danger text-light\";\r\n          priorityString = \"HIGH\";\r\n        }\r\n\r\n        if(projectTask.priority === 2){\r\n          priorityClassName = \"bg-warning text-light\";\r\n          priorityString = \"MEDIUM\";\r\n        }\r\n\r\n        if(projectTask.priority === 3){\r\n          priorityClassName = \"bg-info text-light\";\r\n          priorityString = \"LOW\";\r\n        }\r\n\r\n        return (\r\n              <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClassName}`}>\r\n                  ID: {projectTask.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                  <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n                  <p className=\"card-text text-truncate \">\r\n                    {projectTask.acceptanceCriteria}\r\n                  </p>\r\n                  <Link to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`} className=\"btn btn-primary\">\r\n                    View / Update\r\n                  </Link>\r\n                  <button className=\"btn btn-danger ml-4\" onClick={() => this.onDeleteButtonClick(projectTask.projectIdentifier, projectTask.projectSequence)}>Delete</button>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProjectTask}) (ProjectTask);","import axios from 'axios';\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, UP, DELETE_PROJECT_TASK } from './types'\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch =>{\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const getBacklog = (backlog_id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type : GET_BACKLOG,\r\n            payload : res.data\r\n        })\r\n    } catch (err) {\r\n        //console.log(err)\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, project_task_sequence) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${project_task_sequence}`);\r\n        dispatch({\r\n            type : GET_PROJECT_TASK,\r\n            payload : res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, project_task_sequence, updatedProjectTask, history) => async dispatch => {\r\n\r\n    try {\r\n        \r\n        const res = await axios.patch(`/api/backlog/${backlog_id}/${project_task_sequence}`, updatedProjectTask);\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, project_task_sequence) => async dispatch => {\r\n\r\n    if(window.confirm(`Do you want to delete the project task ${project_task_sequence}?, this action cannot be undone`)){\r\n        try {\r\n            await axios.delete(`/api/backlog/${backlog_id}/${project_task_sequence}`);\r\n            dispatch({\r\n                type : DELETE_PROJECT_TASK,\r\n                payload : project_task_sequence\r\n            })\r\n        } catch (err) {\r\n            \r\n        }    \r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const {projectTasks} = this.props;\r\n        const tasks = projectTasks.map(projectTask => (\r\n            <ProjectTask key={projectTask.id} projectTask={projectTask}/>\r\n        ));\r\n\r\n        let toDoItems = []\r\n        let inProgressItems = []\r\n        let onReviewItems = []\r\n        let doneItems = []\r\n            //console.log(tasks)\r\n        for(let i = 0; i < tasks.length; i++){\r\n            if(tasks[i].props.projectTask.status === \"TO_DO\" ){\r\n                toDoItems.push(tasks[i])\r\n            }\r\n            if(tasks[i].props.projectTask.status === \"IN_PROGRESS\" ){\r\n                inProgressItems.push(tasks[i])\r\n            }\r\n            if(tasks[i].props.projectTask.status === \"ON_REVIEW\" ){\r\n              onReviewItems.push(tasks[i])\r\n            }\r\n            if(tasks[i].props.projectTask.status === \"DONE\" ){\r\n                doneItems.push(tasks[i])\r\n            }\r\n        }\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-secondary text-white\">\r\n                    <h3>TO DO</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                    toDoItems\r\n                }\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-primary text-white\">\r\n                    <h3>In Progress</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  inProgressItems\r\n                }\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-warning text-white\">\r\n                    <h3>On Review</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  onReviewItems\r\n                }\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-success text-white\">\r\n                    <h3>Done</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  doneItems\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backlog; ","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\nimport { getUsersForSearchQuery, resetSearchedUsernames, addUserToTeam, getProjectTeamMembers } from '../../actions/projectActions';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, Button, Row, Col } from 'react-bootstrap';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             errors : {},\r\n             showFindTeamMemberModel : false,\r\n             showTeamModel: false,\r\n             searchQuery : \"\",\r\n             suggestions : [],\r\n             teamMembers : []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProp){\r\n        if(nextProp.errors){\r\n            this.setState({errors : nextProp.errors});\r\n        }\r\n        if(nextProp.userNames){\r\n             this.setState(() => ({suggestions : nextProp.userNames}));\r\n        }\r\n        if(nextProp.teamMembers){\r\n            this.setState(() => ({teamMembers : nextProp.teamMembers}));\r\n        }\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.props.getBacklog(id)\r\n        this.props.getProjectTeamMembers(id);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.resetSearchedUsernames();\r\n    }\r\n\r\n    onSearchQueryChange = (event) => {\r\n        this.setState({[event.target.name] : event.target.value})\r\n        /*let suggestions = [];\r\n        if(event.target.value.length > 0){\r\n            const regex = new RegExp(`^${event.target.value}`, 'i');\r\n            suggestions = this.items.sort().filter(v => regex.test(v));\r\n        }*/\r\n        if(event.target.value.length > 0 && event.target.value.charAt(0) !== ' '){\r\n            this.props.getUsersForSearchQuery(event.target.value);\r\n        }else{\r\n            this.setState(() => ({suggestions : []}));\r\n            this.props.resetSearchedUsernames();\r\n        }\r\n        //console.log(this.props.userNames);\r\n    }\r\n\r\n    addUserToTeamOnClick = (username) => {\r\n        const {id} = this.props.match.params;\r\n        this.props.addUserToTeam( id, username);\r\n        this.setState({showFindTeamMemberModel : false, searchQuery : ''})\r\n    }\r\n\r\n    renderSuggestions = () => {\r\n        const { suggestions } = this.state;\r\n        if(!suggestions || suggestions.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <ul>\r\n                {suggestions.map((username) => <li key={username} onClick={(e) => this.addUserToTeamOnClick(username)}>{username}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {projectTasks} = this.props.backlog;\r\n        const {errors, teamMembers} = this.state;\r\n\r\n        let BoardContent;\r\n        \r\n        const renderTeamDetails = () => {\r\n            \r\n            //console.log(teamMembers)\r\n            return (\r\n              <div>\r\n                {teamMembers.map(teamMember => (\r\n                <ListGroup.Item key={teamMember.username} variant=\"light\">\r\n                  <Row >\r\n                    <Col>{teamMember.fullname}</Col>\r\n                    <Col>{teamMember.username}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                ))}\r\n              </div>\r\n            );\r\n        }\r\n\r\n        const boardValidator = (errors, projectTasks) => {\r\n            if(projectTasks.length < 1){\r\n                if(errors.projectNotFound){\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    )\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                            No tasks created for this project\r\n                        </div>\r\n                    )\r\n                }\r\n            } else {\r\n                return (\r\n                    <Backlog projectTasks={projectTasks}/>\r\n                )\r\n            }\r\n        }\r\n\r\n        BoardContent = boardValidator(errors, projectTasks)\r\n        \r\n        return (\r\n            <div>\r\n          <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3  mt-3 ml-1\">\r\n              <i className=\"cool-text\"> <FontAwesomeIcon icon={faPlusCircle} /> Create Project Task</i>\r\n            </Link>\r\n            <Button className=\"btn btn-success mb-3  mt-3 ml-1\" onClick={() => this.setState({showFindTeamMemberModel : true})}>\r\n              <i className=\"cool-text\"> <FontAwesomeIcon icon={faPlusCircle} /> Add team members</i>\r\n            </Button>\r\n            <Button className=\"btn btn-info mb-3  mt-3 ml-1\" onClick={() => this.setState({showTeamModel : true})}>\r\n              <i className=\"cool-text\"> <FontAwesomeIcon icon={faUsers} /> View team</i>\r\n            </Button>\r\n            <br />\r\n            <hr />\r\n            {BoardContent}\r\n          </div>\r\n\r\n            <Modal\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.showFindTeamMemberModel}\r\n            >\r\n            <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add team members\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <h4>Search by username</h4>\r\n            <div className=\"AutoCompleteText\">\r\n                <input type=\"text\" name=\"searchQuery\" value={this.state.searchQuery} onChange={this.onSearchQueryChange}/>\r\n                <ul>\r\n                    {\r\n                        this.renderSuggestions()\r\n                    }\r\n                </ul>\r\n            </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button onClick={() => {this.setState({showFindTeamMemberModel : false, searchQuery: ''}); this.props.resetSearchedUsernames();}}>Close</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            \r\n            <Modal\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.showTeamModel}\r\n            >\r\n            <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                {this.props.match.params.id} - Project team\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h6><Row><Col></Col><Col></Col></Row></h6>\r\n            <div>\r\n                {\r\n                    renderTeamDetails()\r\n                }\r\n            </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button onClick={() => {this.setState({showTeamModel : false})}}>Close</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.protoTypes = {\r\n    backlog : PropTypes.object.isRequired,\r\n    getBacklog : PropTypes.func.isRequired,\r\n    getUsersForSearchQuery : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired,\r\n    userNames : PropTypes.array.isRequired,\r\n    resetSearchedUsernames : PropTypes.func.isRequired,\r\n    addUserToTeam : PropTypes.func.isRequired,\r\n    getProjectTeamMembers : PropTypes.func.isRequired,\r\n    teamMembers : PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog : state.backlog,\r\n    errors : state.errors,\r\n    userNames : state.project.userNames,\r\n    teamMembers : state.project.teamMembers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBacklog, getUsersForSearchQuery, resetSearchedUsernames, addUserToTeam, getProjectTeamMembers}) (ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames'\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      //console.log(nextProps.errors)\r\n      if(nextProps.errors){\r\n        this.setState({errors : nextProps.errors});\r\n      }\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    \r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-info mt-3\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\" : errors.summary\r\n                      })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"ON_REVIEW\">ON REVIEW</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProp,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport '../../App.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFlagCheckered, faEdit, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ProjectItem extends Component {\r\n    \r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    render() {\r\n        const {project} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                            <div className=\"card card-body bg-light mb-3\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"mx-auto pid\">{project.projectIdentifier}</span>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                                        <h3>{project.projectName}</h3>\r\n                                        <p className=\"cool-text\">{project.description}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-3 d-lg-block padding-override\">\r\n                                        <ul className=\"list-group\">\r\n                                            <Link to={`/projectBoard/${ project.projectIdentifier }`}>\r\n                                                <li className=\"list-group-item board\">\r\n                                                    <i className=\"cool-text bold-text\"> <FontAwesomeIcon icon={faFlagCheckered}/> Project Board </i>\r\n                                                </li>\r\n                                            </Link>\r\n                                            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                                <li className=\"list-group-item update\">\r\n                                                    <i className=\"cool-text bold-text\"> <FontAwesomeIcon icon={faEdit}/> Update Project Info</i>\r\n                                                </li>\r\n                                            </Link>\r\n                                                <li className=\"list-group-item delete\" onClick={() => this.onDeleteClick(project.projectIdentifier)}>\r\n                                                    <i className=\"cool-text bold-text\"> <FontAwesomeIcon icon={faMinusCircle}/> Delete Project</i>\r\n                                                </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject}) (ProjectItem);","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to='/addProject' className=\"btn btn-lg btn-info\">\r\n            Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects, clearErrors, getTeamProjects } from \"../actions/projectActions\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             activeKey : \"My Projects\"\r\n        }\r\n    }\r\n    \r\n\r\n  componentDidMount() {\r\n    this.props.clearErrors();\r\n    this.props.getProjects();\r\n    this.props.getTeamProjects();\r\n  }\r\n\r\n  toggleTab = (eventKey) => {\r\n    this.setState({activeKey : eventKey})\r\n  }\r\n\r\n  render() {\r\n    const { projects, teamProjects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton/>\r\n              <br />\r\n              <hr />\r\n              <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"My Projects\" title=\"My Projects\" className=\"mt-4\" >{/*onClick={this.toggleTab(\"My Projects\")}*/}\r\n                  {projects.map(project => (\r\n                    <ProjectItem key={project.id} project={project}/>\r\n                  ))}\r\n                </Tab>\r\n                <Tab eventKey=\"Team Projects\" title=\"Team Projects\" className=\"mt-4\" >{/*onClick={this.toggleTab(\"Team Projects\")}*/}\r\n                {teamProjects.map(project => (\r\n                    <ProjectItem key={project.id} project={project} />\r\n                  ))}\r\n                </Tab>\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n  getTeamProjects: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects, clearErrors, getTeamProjects })(\r\n  Dashboard\r\n);\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport classnames from 'classnames'\r\nimport { connect } from \"react-redux\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport { clearErrors } from \"../../../actions/projectActions\";\r\nimport  PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const { id } = this.props.match.params;\r\n    \r\n        this.state = {\r\n            id:\"\",\r\n          summary: \"\",\r\n          acceptanceCriteria: \"\",\r\n          status: \"\",\r\n          priority: 0,\r\n          dueDate: null,\r\n          projectIdentifier: id,\r\n          errors: {},\r\n          createdBy: \"\"\r\n        };\r\n      }\r\n\r\n    componentDidMount(){\r\n        const {id, ptId} = this.props.match.params;\r\n        this.props.getProjectTask(id, ptId);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        const {\r\n            id, \r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            createdBy\r\n        } = nextProps.projectTask;\r\n\r\n        this.setState({\r\n            id,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            createdBy\r\n        })\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors : nextProps.errors})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const updatedTask = {\r\n            id : this.state.id,\r\n            summary : this.state.summary,\r\n            acceptanceCriteria : this.state.acceptanceCriteria,\r\n            status : this.state.status,\r\n            priority : this.state.priority,\r\n            dueDate : this.state.dueDate, \r\n        }\r\n\r\n        const {id, ptId} = this.props.match.params;\r\n        this.props.updateProjectTask(id, ptId, updatedTask, this.props.history)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {projectIdentifier, errors} = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${projectIdentifier}`} className=\"btn btn-info mt-3\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n        <p className=\"lead text-center\">Task created by: {this.state.createdBy}</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\" : errors.summary\r\n                      })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"  \r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate || ''}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"ON_REVIEW\">ON REVIEW</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    projectTask : PropTypes.object.isRequired,\r\n    getProjectTask : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired,\r\n    updateProjectTask : PropTypes.func.isRequired,\r\n    clearErrors : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projectTask : state.backlog.projectTask,\r\n    errors : state.errors    \r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask, clearErrors}) (UpdateProjectTask); ","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                    <p className=\"lead\">\r\n                      Create your account to use the Kanban workflow management tool for your projects\r\n                    </p>\r\n                    <hr />\r\n                    <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                      Sign Up\r\n                    </Link>\r\n                    <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                      Login\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {}) (Landing);","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n        this.props.history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullname\r\n                    })}\r\n                    placeholder=\"Name\"\r\n                    name=\"fullname\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullname}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\"> {errors.fullname} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\"> {errors.username} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\"> {errors.password} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.confirmPassword}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {\" \"}\r\n                      {errors.confirmPassword}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  createNewUser: PropTypes.func.isRequired,\r\n  security : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security : state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n      if(this.props.security.validToken){\r\n          this.props.history.push(\"/dashboard\");\r\n      }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\"> {errors.username} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\"> {errors.password} </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps) (SecuredRoute);","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Table,\r\n  FormLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProfileDetails,\r\n  updateFullname,\r\n  updatePassword\r\n} from \"../../actions/profileActions\";\r\nimport { clearErrors } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modalText: \"\",\r\n      modalValue: \"\",\r\n      modalInputName: \"\",\r\n      fullnameToChange: \"\",\r\n      passwordToChange: \"\",\r\n      confirmPassword: \"\",\r\n      fullname: \"\",\r\n      username: \"\",\r\n      created_at: null,\r\n      last_login: null,\r\n      projects: [],\r\n      errors: {},\r\n      message: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProfileDetails();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      fullname,\r\n      username,\r\n      created_at,\r\n      last_login,\r\n      projects\r\n    } = nextProps.userDetail;\r\n\r\n    this.setState({ fullname, username, projects, created_at, last_login });\r\n    //console.log(projects)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearErrors();\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      show: false,\r\n      fullnameToChange: \"\",\r\n      passwordToChange: \"\",\r\n      confirmPassword: \"\",\r\n      modalInputName: \"\",\r\n      modalValue: \"\",\r\n      modalText: \"\"\r\n    });\r\n  };\r\n\r\n  handleShow = (text, name) => {\r\n    this.setState({ show: true, modalText: text, modalInputName: name });\r\n    if (text === \"password\") this.setState({ changePassword: true });\r\n  };\r\n\r\n  onChange = event => {\r\n    //console.log(event.target.name)\r\n    if (event.target.name === \"confirmPassword\") {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    } else {\r\n      this.setState({\r\n        [event.target.name]: event.target.value,\r\n        modalValue: event.target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  updateDetail = inputType => {\r\n    //console.log(this.state.email)\r\n    this.props.clearErrors();\r\n    if (inputType === \"fullname\") {\r\n      const data = { fullname: this.state.fullnameToChange };\r\n      this.props.updateFullname(data);\r\n    } else if (inputType === \"password\") {\r\n      const data = {\r\n        password: this.state.passwordToChange,\r\n        confirmPassword: this.state.confirmPassword\r\n      };\r\n      this.props.updatePassword(data);\r\n    }\r\n    this.handleClose();\r\n  };\r\n\r\n  render() {\r\n    const { errors, message, projects } = this.state;\r\n\r\n    const projectList = projects.map(project => (\r\n        <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n        <ListGroup.Item key={project.projectIdentifier}>\r\n        <Row>\r\n          <Col md={2}>{project.projectIdentifier}</Col>\r\n          <Col md={10}>{project.projectName}</Col>\r\n        </Row>\r\n        </ListGroup.Item>\r\n        </Link>\r\n    ));\r\n\r\n    return (\r\n      <Container fluid={true}>\r\n        {errors.error && (\r\n          <div className=\"margin-top-20 alert alert-danger\" role=\"alert\">\r\n            {errors.error}\r\n          </div>\r\n        )}\r\n        {message.success && (\r\n          <div className=\"margin-top-20 alert alert-success\" role=\"alert\">\r\n            {message.success}\r\n          </div>\r\n        )}\r\n        <h2 className=\"margin-top-50 text-align-center\">Profile</h2>\r\n        <Row className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">Fullname</Col>\r\n          <Col className=\"text-align-center\">{this.state.fullname}</Col>\r\n          <Col>\r\n            <Button\r\n              onClick={() => this.handleShow(\"fullname\", \"fullnameToChange\")}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n              Edit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">Email</Col>\r\n          <Col className=\"text-align-center\">{this.state.username}</Col>\r\n          <Col></Col>\r\n        </Row>\r\n        <Row className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">Created </Col>\r\n          <Col className=\"text-align-center\">{this.state.created_at}</Col>\r\n          <Col></Col>\r\n        </Row>\r\n        <Row className=\"margin-top-20\">\r\n          <Col className=\"text-right-align\">Last login </Col>\r\n          <Col className=\"text-align-center\">{this.state.last_login}</Col>\r\n          <Col></Col>\r\n        </Row>\r\n        <Button\r\n          className=\"margin-top-20 bg-danger btn-danger button-center\"\r\n          onClick={() => this.handleShow(\"password\", \"passwordToChange\")}\r\n        >\r\n          Change Password\r\n        </Button>\r\n\r\n        <h2 className=\"margin-top-50 text-align-center\">Projects</h2>\r\n\r\n        <ListGroup>{projectList}</ListGroup>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Change {this.state.modalText}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Label>Enter new {this.state.modalText}</Form.Label>\r\n              <Form.Control\r\n                type={this.state.changePassword ? \"password\" : \"text\"}\r\n                name={this.state.modalInputName}\r\n                value={this.state.modalValue}\r\n                onChange={this.onChange}\r\n              />\r\n              {this.state.changePassword && (\r\n                <React.Fragment>\r\n                  <Form.Label>Enter confirmation password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              onClick={() => this.updateDetail(this.state.modalText)}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  userDetail: PropTypes.object.isRequired,\r\n  getProfileDetails: PropTypes.func.isRequired,\r\n  updateFullname: PropTypes.func.isRequired,\r\n  updatePassword: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userDetail: state.userDetail,\r\n  errors: state.errors,\r\n  message: state.message\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getProfileDetails,\r\n  updateFullname,\r\n  updatePassword,\r\n  clearErrors\r\n})(Profile);\r\n","import axios from 'axios';\r\nimport { GET_USER_DETAILS, GET_ERRORS } from './types'\r\n\r\nexport const getProfileDetails = () => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.get(\"/api/profile/\")\r\n        dispatch({\r\n            type : GET_USER_DETAILS,\r\n            payload : res.data\r\n        })\r\n    }catch(err){\r\n       // console.log(err.response.data)\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateFullname = (data) => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.put(\"/api/profile/updateFullname\", data);\r\n        dispatch({\r\n            type : GET_USER_DETAILS,\r\n            payload : res.data\r\n        })\r\n    }catch(err){\r\n        console.log(err.response.data)\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : {error : err.response.data.fullname}\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updatePassword = (data) => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.put(\"/api/profile/updatePassword\", data);\r\n    }catch(err){\r\n        //console.log(err.response.data)\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : { error : ((err.response.data.password)?err.response.data.password : \"\" )+ \", \" + ((err.response.data.confirmPassword)?err.response.data.confirmPassword : \"\")}\r\n        })\r\n    }\r\n\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport AddProject from './Components/Project/AddProject';\nimport Header from './Components/Layout/Header';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './Components/Project/UpdateProject';\nimport ProjectBoard from \"./Components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from './Components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport Dashboard from './Components/Dashboard';\nimport UpdateProjectTask from './Components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './Components/Layout/Landing';\nimport Register from './Components/Authentication/Register';\nimport Login from './Components/Authentication/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\nimport Profile from './Components/Profile/Profile';\n\n\nconst jwtToken = localStorage.jwtToken;\n    console.log(\"wiilll update\")\n    if(jwtToken){\n      setJWTToken(jwtToken);\n      \n      const decodedToken = jwt_decode(jwtToken);\n      //console.log(decodedToken)\n      store.dispatch({\n        type : SET_CURRENT_USER,\n        payload : decodedToken\n      });\n    \n      const currentTime = Date.now()/1000;\n      //once token is expired\n      if(decodedToken.exp < currentTime){\n        //handle logout\n        //console.log(\"logout\")\n        store.dispatch(logout())\n        window.location.href = \"/\";\n      }\n    \n    }\n\nclass App extends Component {\n\n\n  render(){\n  return (\n    <React.Fragment>\n    <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        {\n          //Public routes\n        }\n        <Route exact path='/' component={Landing}/>\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/login\" component={Login}/>\n        {\n          //Private routes\n        }\n        <Switch>\n          <SecuredRoute exact path='/dashboard' component={Dashboard} />\n          <SecuredRoute exact path='/addProject' component={AddProject} />\n          <SecuredRoute exact path='/updateProject/:id' component={UpdateProject} />\n          <SecuredRoute exact path='/projectBoard/:id' component={ProjectBoard} />\n          <SecuredRoute exact path='/addProjectTask/:id' component={AddProjectTask}/>\n          <SecuredRoute exact path='/updateProjectTask/:id/:ptId' component={UpdateProjectTask}/>\n          <SecuredRoute exact path='/profile' component={Profile}/>\n        </Switch>\n      </div>\n    </Router>\n    </Provider>\n    </React.Fragment>\n  );\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}