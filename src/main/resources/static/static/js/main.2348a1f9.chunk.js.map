{"version":3,"sources":["actions/types.js","actions/projectActions.js","Components/Project/AddProject.js","securityUtils/setJWTToken.js","actions/securityActions.js","Components/Layout/Header.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","Components/Project/UpdateProject.js","Components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","Components/ProjectBoard/Backlog.js","Components/ProjectBoard/ProjectBoard.js","Components/ProjectBoard/ProjectTasks/AddProjectTask.js","Components/Project/ProjectItem.js","Components/Project/CreateProjectButton.js","Components/Dashboard.js","Components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","Components/Layout/Landing.js","Components/Authentication/Register.js","Components/Authentication/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","clearErrors","AddProject","props","onChange","event","setState","target","name","value","onSubmit","preventDefault","newProject","projectName","state","projectIdentifier","description","start_date","end_date","errors","nextProps","this","className","classnames","placeholder","Component","connect","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","id","to","userIsAuthenticated","icon","faUserCircle","fullname","onClick","data-toggle","data-target","initialState","projects","projectTasks","projectTask","checkValidToken","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updatedProject","match","params","getProject","disabled","get","res","ProjectTask","onDeleteButtonClick","backlogId","projectTaskSequence","deleteProjectTask","priorityString","priorityClassName","priority","summary","acceptanceCriteria","backlog_id","project_task_sequence","confirm","delete","Backlog","tasks","map","key","toDoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","nextProp","getBacklog","BoardContent","projectNotFound","role","boardValidator","faPlusCircle","protoTypes","PropTypes","object","isRequired","func","AddProjectTask","newTask","dueDate","addProjectTask","project_task","ProjectItem","onDeleteClick","deleteProject","faFlagCheckered","faEdit","faMinusCircle","CreateProjectButton","Fragment","Dashboard","getProjects","UpdateProjectTask","updatedTask","ptId","updateProjectTask","getProjectTask","updatedProjectTask","patch","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","console","log","decodedToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"wZAAaA,EAAa,aCGbC,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAErCC,IAAMC,KAAK,gBAAiBL,GAFS,OAG3CC,EAAQK,KAAK,cACbJ,EAAS,CACLK,KAAMT,EACNU,QAAS,KAN8B,gDAS3CN,EAAS,CACLK,KAAMT,EACNU,QAAS,KAAIC,SAASC,OAXiB,yDAAtB,uDAoChBC,EAAc,kBAAM,SAAAT,GAC7BA,EAAS,CACLK,KAAMT,EACNU,QAAS,O,iBCpCXI,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRC,SAAW,SAACC,GACR,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SAtBpC,EAyBnBC,SAAW,SAACL,GACVA,EAAMM,iBACN,IAAMC,EAAa,CACfC,YAAa,EAAKC,MAAMD,YACxBE,kBAAmB,EAAKD,MAAMC,kBAC9BC,YAAa,EAAKF,MAAME,YACxBC,WAAY,EAAKH,MAAMG,WACvBC,SAAU,EAAKJ,MAAMI,UAEvB,EAAKf,MAAMd,cAAcuB,EAAY,EAAKT,MAAMZ,UA/BlD,EAAKuB,MAAQ,CACXD,YAAa,GACbE,kBAAmB,GACnBC,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,OAAQ,IATO,E,uFAcOC,GACrBA,EAAUD,QACXE,KAAKf,SAAS,CAACa,OAASC,EAAUD,W,+BAqB5B,IAEDA,EAAUE,KAAKP,MAAfK,OAEP,OACE,yBAAKG,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,kBACA,6BACA,0BAAMZ,SAAUW,KAAKX,UACnB,yBAAKY,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAWC,IAAW,gCAAiC,CACrD,aAAcJ,EAAON,cAEvBL,KAAK,cACLC,MAAOY,KAAKP,MAAMD,YAClBT,SAAUiB,KAAKjB,SACfoB,YAAY,iBAEbL,EAAON,aACN,yBAAKS,UAAU,oBAAoBH,EAAON,cAG9C,yBAAKS,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAWC,IAAW,+BAAgC,CACpD,aAAcJ,EAAOJ,oBAEvBP,KAAK,oBACLC,MAAOY,KAAKP,MAAMC,kBAClBX,SAAUiB,KAAKjB,SACfoB,YAAY,sBAEbL,EAAOJ,mBACN,yBAAKO,UAAU,oBAAoBH,EAAOJ,oBAG9C,yBAAKO,UAAU,cACb,8BACEA,UAAWC,IAAW,+BAAgC,CACpD,aAAcJ,EAAOH,cAEvBQ,YAAY,sBACZhB,KAAK,cACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAME,cAEnBG,EAAOH,aACN,yBAAKM,UAAU,oBAAoBH,EAAOH,cAG9C,0CACA,yBAAKM,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVd,KAAK,aACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMG,cAGtB,kDACA,yBAAKK,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVd,KAAK,WACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMI,YAItB,2BACErB,KAAK,SACLyB,UAAU,4C,GArHHG,aAyIVC,eAJS,SAAAZ,GAAK,MAAK,CAChCK,OAASL,EAAMK,UAGuB,CAAE9B,iBAA3BqC,CAA6CxB,GCrI7CyB,EARK,SAAAC,GACbA,EACClC,IAAMmC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1ClC,IAAMmC,SAASC,QAAQC,OAAvB,e,iBC0CFC,EAAS,kBAAM,SAAAxC,GACxByC,aAAaC,WAAW,YACxBP,GAAY,GACZnC,EAAS,CACLK,KJzCwB,oBI0CxBC,QAAU,O,gBC7CZqC,E,2MAEFH,OAAS,WACL,EAAK7B,MAAM6B,SACXI,OAAOC,SAASC,KAAO,K,wEAGjB,IAiDFC,EAjDC,EAEsBlB,KAAKlB,MAAMqC,SAA/BC,EAFF,EAEEA,WAAYC,EAFd,EAEcA,KAEbC,EACF,yBAAKrB,UAAU,2BAA2BsB,GAAG,cAE7C,wBAAItB,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,YAAYuB,GAAG,aAA/B,YAIF,wBAAIvB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWuB,GAAG,UAA9B,YAQFC,EACF,yBAAKxB,UAAU,2BAA2BsB,GAAG,cAC7C,wBAAItB,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWuB,GAAG,cAA9B,eAMJ,wBAAIvB,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,YAAYuB,GAAG,cAC7B,kBAAC,IAAD,CAAiBE,KAAMC,MADzB,WAGON,EAAKO,YAGd,wBAAI3B,UAAU,YACZ,kBAAC,IAAD,CAAM4B,QAAS7B,KAAKW,OAAQV,UAAU,WAAWuB,GAAG,WAApD,aAgBR,OALIN,EADDE,GAAcC,EACCI,EAEAH,EAIhB,6BACE,yBAAKrB,UAAU,oDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeuB,GAAG,KAAlC,2BAGA,4BACEvB,UAAU,iBACVzB,KAAK,SACLsD,cAAY,WACZC,cAAY,eAEZ,0BAAM9B,UAAU,yBAGjBiB,S,GAhFId,aAkGNC,eAJS,SAAAZ,GAAK,MAAK,CAC9B0B,SAAW1B,EAAM0B,YAGmB,CAACR,UAA1BN,CAAoCS,G,gBCxG7CkB,EAAe,G,yjBCArB,IAAMA,EAAe,CACnBC,SAAU,GACVhE,QAAS,I,yjBCFX,IAAM+D,EAAe,CACjBE,aAAe,GACfC,YAAc,I,yjBCFlB,IAAMH,EAAe,CACjBX,KAAO,GACPD,YAAa,GAGXgB,EAAkB,SAAC3D,GACrB,QAAGA,GCFQ4D,cAAgB,CAC3BvC,OJHW,WAAqC,IAA5BL,EAA2B,uDAArBuC,EAAcM,EAAO,uCAC/C,OAAQA,EAAO9D,MACX,KAAKT,EACD,OAAOuE,EAAO7D,QAElB,QACI,OAAOgB,IIFfxB,QHDW,WAAwC,IAA/BwB,EAA8B,uDAAtBuC,EAAcM,EAAQ,uCACpD,OAAQA,EAAO9D,MACb,IPRwB,eOStB,OAAO,EAAP,GACKiB,EADL,CAEEwC,SAAUK,EAAO7D,UAErB,IPZuB,cOarB,OAAO,EAAP,GACKgB,EADL,CAEExB,QAASqE,EAAO7D,UAEpB,IPhB0B,iBOiBxB,OAAO,EAAP,GACKgB,EADL,CAEEwC,SAAUxC,EAAMwC,SAASM,QAAQ,SAAAtE,GAAO,OAAIA,EAAQyB,oBAAsB4C,EAAO7D,aAErF,QACE,OAAOgB,IGhBT+C,QFFW,WAAuC,IAA9B/C,EAA6B,uDAArBuC,EAAcM,EAAO,uCACjD,OAAQA,EAAO9D,MAEX,IRJmB,cQKnB,OAAO,KACAiB,EADP,CAEIyC,aAAeI,EAAO7D,UAG1B,IRTwB,mBQUxB,OAAO,KACAgB,EADP,CAEI0C,YAAcG,EAAO7D,UAGzB,IRd2B,uBQevB,OAAO,KACAgB,EADP,CAEIyC,aAAezC,EAAMyC,aAAaK,QAAO,SAAAJ,GAAW,OAAIA,EAAYM,kBAAoBH,EAAO7D,aAGvG,QACI,OAAOgB,IEnBf0B,SDKW,WAAuC,IAA9B1B,EAA6B,uDAArBuC,EAAcM,EAAO,uCACjD,OAAOA,EAAO9D,MAEV,ITPwB,oBSQpB,YACOiB,EADP,CAEI2B,WAAagB,EAAgBE,EAAO7D,SACpC4C,KAAOiB,EAAO7D,UAGtB,QACI,OAAOgB,MEtBbuC,EAAe,GACfU,EAAa,CAACC,KAIdC,EAAqB7B,OAAO8B,8BAAgC9B,OAAO8B,+BAqB1DC,EAnBZ/B,OAAOgC,UAAUC,UAAUC,SAAS,WAAaL,EACxCM,YACJC,EACAnB,EACAoB,YACIC,IAAe,WAAf,EAAmBX,GACnBE,IAIAM,YACJC,EACAnB,EACAoB,YACIC,IAAe,WAAf,EAAmBX,KClBzBY,G,YACJ,WAAYxE,GAAQ,IAAD,8BACjB,4CAAMA,KA2CRC,SAAW,SAACC,GACV,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SA7ClC,EAgDnBC,SAAW,SAACL,GACRA,EAAMM,iBACN,IAAMiE,EAAiB,CACrBhC,GAAK,EAAK9B,MAAM8B,GAChB/B,YAAc,EAAKC,MAAMD,YACzBE,kBAAoB,EAAKD,MAAMC,kBAC/BC,YAAc,EAAKF,MAAME,YACzBC,WAAa,EAAKH,MAAMG,WACxBC,SAAW,EAAKJ,MAAMI,UAExB,EAAKf,MAAMd,cAAcuF,EAAgB,EAAKzE,MAAMZ,UAvDtD,EAAKuB,MAAQ,CACX8B,GAAK,GACL/B,YAAa,GACbE,kBAAmB,GACnBC,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,OAAQ,IAVO,E,iFAcE,IACXyB,EAAOvB,KAAKlB,MAAM0E,MAAMC,OAAxBlC,GAERvB,KAAKlB,MAAM4E,WAAWnC,EAAIvB,KAAKlB,MAAMZ,W,gDAGb6B,GAAY,IAAD,EAQ/BA,EAAU9B,QANZsD,EAFiC,EAEjCA,GACA/B,EAHiC,EAGjCA,YACAE,EAJiC,EAIjCA,kBACAC,EALiC,EAKjCA,YACAC,EANiC,EAMjCA,WACAC,EAPiC,EAOjCA,SAGFG,KAAKf,SAAS,CACZsC,KACA/B,cACAE,oBACAC,cACAC,aACAC,aAGCE,EAAUD,QACXE,KAAKf,SAAS,CAACa,OAASC,EAAUD,W,+BAqB5B,IAEAA,EAAWE,KAAKP,MAAhBK,OACR,OAEE,yBAAKG,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAMZ,SAAUW,KAAKX,UACnB,yBAAKY,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAWC,IAAW,gCAAiC,CACrD,aAAeJ,EAAON,cAExBW,YAAY,eACZhB,KAAK,cACLC,MAAOY,KAAKP,MAAMD,YAClBT,SAAUiB,KAAKjB,WAEhBe,EAAON,aACN,yBAAKS,UAAU,oBAAoBH,EAAON,cAG9C,yBAAKS,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVE,YAAY,oBACZhB,KAAK,oBACLC,MAAOY,KAAKP,MAAMC,kBAClBiE,UAAQ,KAGZ,yBAAK1D,UAAU,cACb,8BACEA,UAAWC,IAAW,+BAAgC,CACpD,aAAcJ,EAAOH,cAEvBQ,YAAY,sBACZhB,KAAK,cACLC,MAAOY,KAAKP,MAAME,YAClBZ,SAAUiB,KAAKjB,WAEhBe,EAAOH,aACN,yBAAKM,UAAU,oBAAoBH,EAAOH,cAG9C,0CACA,yBAAKM,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVd,KAAK,aACLC,MAAOY,KAAKP,MAAMG,WAClBb,SAAUiB,KAAKjB,YAGnB,kDACA,yBAAKkB,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVd,KAAK,WACLC,MAAOY,KAAKP,MAAMI,SAClBd,SAAUiB,KAAKjB,YAInB,2BACEP,KAAK,SACLyB,UAAU,4C,GAxIAG,aA+JbC,gBALS,SAAAZ,GAAK,MAAK,CAChCxB,QAASwB,EAAMxB,QAAQA,QACvB6B,OAAQL,EAAMK,UAKd,CAAE4D,WX7IsB,SAACnC,EAAIrD,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAEjBC,IAAMuF,IAAN,uBAA0BrC,IAFT,OAE7BsC,EAF6B,OAGnC1F,EAAS,CACLK,KD7Be,cC8BfC,QAASoF,EAAIlF,OALkB,gDAQnCT,EAAQK,KAAK,cARsB,yDAAjB,uDW6IVP,iBAFDqC,CAGbiD,ICnKIQ,G,2MAEJC,oBAAsB,SAACC,EAAWC,GAC9B,EAAKnF,MAAMoF,kBAAkBF,EAAWC,I,wEAGhC,IAGFE,EACAC,EAJC,OACGjC,EAAgBnC,KAAKlB,MAArBqD,YAoBR,OAf4B,IAAzBA,EAAYkC,WACbD,EAAoB,uBACpBD,EAAiB,QAGS,IAAzBhC,EAAYkC,WACbD,EAAoB,wBACpBD,EAAiB,UAGS,IAAzBhC,EAAYkC,WACbD,EAAoB,qBACpBD,EAAiB,OAIb,yBAAKlE,UAAU,sBACb,yBAAKA,UAAS,mCAA8BmE,IAA5C,OACOjC,EAAYM,gBADnB,iBACkD0B,GAElD,yBAAKlE,UAAU,sBACb,wBAAIA,UAAU,cAAckC,EAAYmC,SACxC,uBAAGrE,UAAU,4BACVkC,EAAYoC,oBAEf,kBAAC,IAAD,CAAM/C,GAAE,6BAAwBW,EAAYzC,kBAApC,YAAyDyC,EAAYM,iBAAmBxC,UAAU,mBAA1G,iBAGA,4BAAQA,UAAU,sBAAsB4B,QAAS,kBAAM,EAAKkC,oBAAoB5B,EAAYzC,kBAAmByC,EAAYM,mBAA3H,gB,GAxCQrC,aAmDXC,eAAQ,KAAM,CAAC6D,kBCiBG,SAACM,EAAYC,GAAb,8CAAuC,WAAMtG,GAAN,SAAAC,EAAA,0DAEjE2C,OAAO2D,QAAP,iDAAyDD,EAAzD,oCAFiE,yCAItDpG,IAAMsG,OAAN,uBAA6BH,EAA7B,YAA2CC,IAJW,OAK5DtG,EAAS,CACLK,KdxEmB,uBcyEnBC,QAAUgG,IAP8C,uGAAvC,wDDjBlBpE,CAAoCyD,IESpCc,G,iLAnDP,IAXM,IAGAC,EADiB7E,KAAKlB,MAArBoD,aACoB4C,KAAI,SAAA3C,GAAW,OACtC,kBAAC,GAAD,CAAa4C,IAAK5C,EAAYZ,GAAIY,YAAaA,OAG/C6C,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAERC,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IACY,UAAtCN,EAAMM,GAAGrG,MAAMqD,YAAYkD,QAC1BL,EAAUzG,KAAKsG,EAAMM,IAEgB,gBAAtCN,EAAMM,GAAGrG,MAAMqD,YAAYkD,QAC1BJ,EAAgB1G,KAAKsG,EAAMM,IAEU,SAAtCN,EAAMM,GAAGrG,MAAMqD,YAAYkD,QAC1BH,EAAU3G,KAAKsG,EAAMM,IAI7B,OACE,yBAAKlF,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uCACb,uCAIA+E,GAGN,yBAAK/E,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,6CAIFgF,GAGJ,yBAAKhF,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,sCAIFiF,S,GAtDI9E,a,mBCMhBkF,G,YAGF,WAAYxG,GAAQ,IAAD,8BACf,4CAAMA,KAEDW,MAAQ,CACRK,OAAS,IAJC,E,uFAQOyF,GACnBA,EAASzF,QACRE,KAAKf,SAAS,CAACa,OAASyF,EAASzF,W,0CAIpB,IACVyB,EAAMvB,KAAKlB,MAAM0E,MAAMC,OAAvBlC,GACPvB,KAAKlB,MAAM0G,WAAWjE,K,+BAGhB,IAKFkE,EAJGlE,EAAMvB,KAAKlB,MAAM0E,MAAMC,OAAvBlC,GACAW,EAAgBlC,KAAKlB,MAAM0D,QAA3BN,aAmCP,OAFAuD,EA5BuB,SAAC3F,EAAQoC,GAC5B,OAAGA,EAAakD,OAAS,EAClBtF,EAAO4F,gBAEF,yBAAKzF,UAAU,iCAAiC0F,KAAK,SAChD7F,EAAO4F,iBAGT5F,EAAOJ,kBAEV,yBAAKO,UAAU,iCAAiC0F,KAAK,SAChD7F,EAAOJ,mBAKZ,yBAAKO,UAAU,+BAA+B0F,KAAK,SAAnD,qCAOJ,kBAAC,GAAD,CAASzD,aAAcA,IAKpB0D,CAhCE5F,KAAKP,MAAfK,OAgC+BoC,GAGpC,yBAAKjC,UAAU,aACb,kBAAC,IAAD,CAAMuB,GAAE,0BAAqBD,GAAMtB,UAAU,wBAC3C,uBAAGA,UAAU,aAAb,IAA0B,kBAAC,IAAD,CAAiByB,KAAMmE,MAAjD,yBAEF,6BACA,6BACCJ,O,GAlEcrF,aAwE3BkF,GAAaQ,WAAa,CACtBtD,QAAUuD,KAAUC,OAAOC,WAC3BT,WAAaO,KAAUG,KAAKD,WAC5BnG,OAASiG,KAAUC,OAAOC,YAG9B,IAKe5F,gBALS,SAAAZ,GAAK,MAAK,CAC9B+C,QAAU/C,EAAM+C,QAChB1C,OAASL,EAAMK,UAGqB,CAAC0F,WFvEf,SAAChB,GAAD,8CAAgB,WAAMrG,GAAN,eAAAC,EAAA,+EAGhBC,IAAMuF,IAAN,uBAA0BY,IAHV,OAG5BX,EAH4B,OAIlC1F,EAAS,CACLK,KdpBe,ccqBfC,QAAUoF,EAAIlF,OANgB,gDASlCR,EAAS,CACLK,KAAOT,EACPU,QAAU,KAAIC,SAASC,OAXO,yDAAhB,wDEuEX0B,CAAwCiF,ICrFjDa,G,YACJ,WAAYrH,GAAQ,IAAD,uBACjB,4CAAMA,KAsBRC,SAAW,SAAAC,GACT,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAxBjC,EA2BnBC,SAAW,SAAAL,GACTA,EAAMM,iBAEN,IAAM8G,EAAU,CACd9B,QAAS,EAAK7E,MAAM6E,QACpBC,mBAAoB,EAAK9E,MAAM8E,mBAC/Bc,OAAQ,EAAK5F,MAAM4F,OACnBhB,SAAU,EAAK5E,MAAM4E,SACrBgC,QAAS,EAAK5G,MAAM4G,SAItB,EAAKvH,MAAMwH,eACT,EAAK7G,MAAMC,kBACX0G,EACA,EAAKtH,MAAMZ,UA1CI,IAGTqD,EAAO,EAAKzC,MAAM0E,MAAMC,OAAxBlC,GAHS,OAKjB,EAAK9B,MAAQ,CACX6E,QAAS,GACTC,mBAAoB,GACpBc,OAAQ,GACRhB,SAAU,EACVgC,QAAS,GACT3G,kBAAmB6B,EACnBzB,OAAQ,IAZO,E,uFAgBOC,GAEnBA,EAAUD,QACXE,KAAKf,SAAS,CAACa,OAASC,EAAUD,W,+BA2B9B,IAEAA,EAAWE,KAAKP,MAAhBK,OACAyB,EAAOvB,KAAKlB,MAAM0E,MAAMC,OAAxBlC,GACR,OACE,yBAAKtB,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMuB,GAAE,wBAAmBD,GAAMtB,UAAU,iBAA3C,yBAGA,wBAAIA,UAAU,yBAAd,oBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAMZ,SAAUW,KAAKX,UACnB,yBAAKY,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAWC,IAAW,gCAAiC,CACnD,aAAeJ,EAAOwE,UAE1BnF,KAAK,UACLgB,YAAY,uBACZf,MAAOY,KAAKP,MAAM6E,QAClBvF,SAAUiB,KAAKjB,WAEhBe,EAAOwE,SACN,yBAAKrE,UAAU,oBAAoBH,EAAOwE,UAG9C,yBAAKrE,UAAU,cACb,8BACEA,UAAU,+BACVE,YAAY,sBACZhB,KAAK,qBACLC,MAAOY,KAAKP,MAAM8E,mBAClBxF,SAAUiB,KAAKjB,YAGnB,wCACA,yBAAKkB,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVd,KAAK,UACLC,MAAOY,KAAKP,MAAM4G,QAClBtH,SAAUiB,KAAKjB,YAGnB,yBAAKkB,UAAU,cACb,4BACEA,UAAU,+BACVd,KAAK,WACLC,MAAOY,KAAKP,MAAM4E,SAClBtF,SAAUiB,KAAKjB,UAEf,4BAAQK,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKa,UAAU,cACb,4BACEA,UAAU,+BACVd,KAAK,SACLC,MAAOY,KAAKP,MAAM4F,OAClBtG,SAAUiB,KAAKjB,UAEf,4BAAQK,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACEZ,KAAK,SACLyB,UAAU,4C,GA9HCG,aAkJdC,gBAJQ,SAAAZ,GAAK,MAAK,CAC/BK,OAAQL,EAAMK,UAKd,CAAEwG,eHxJ0B,SAAC9B,EAAY+B,EAAcrI,GAA3B,8CAAuC,WAAMC,GAAN,SAAAC,EAAA,+EAGvDC,IAAMC,KAAN,uBAA2BkG,GAAc+B,GAHc,OAI7DrI,EAAQK,KAAR,wBAA8BiG,IAC9BrG,EAAS,CACLK,KAAMT,EACNU,QAAS,KAPgD,gDAU7DN,EAAS,CACLK,KAAMT,EACNU,QAAS,KAAIC,SAASC,OAZmC,yDAAvC,wDGsJf0B,CAGb8F,ICnJIK,G,2MAEFC,cAAgB,SAAAlF,GACZ,EAAKzC,MAAM4H,cAAcnF,I,wEAGnB,IAAD,OACEtD,EAAW+B,KAAKlB,MAAhBb,QACP,OACI,6BACI,yBAAKgC,UAAU,aACH,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,0BAAMA,UAAU,eAAehC,EAAQyB,oBAE3C,yBAAKO,UAAU,2BACX,4BAAKhC,EAAQuB,aACb,uBAAGS,UAAU,aAAahC,EAAQ0B,cAEtC,yBAAKM,UAAU,8BACX,wBAAIA,UAAU,cACV,kBAAC,IAAD,CAAMuB,GAAE,wBAAoBvD,EAAQyB,oBAChC,wBAAIO,UAAU,yBACV,uBAAGA,UAAU,uBAAb,IAAoC,kBAAC,IAAD,CAAiByB,KAAMiF,MAA3D,qBAGR,kBAAC,IAAD,CAAMnF,GAAE,yBAAoBvD,EAAQyB,oBAChC,wBAAIO,UAAU,0BACV,uBAAGA,UAAU,uBAAb,IAAoC,kBAAC,IAAD,CAAiByB,KAAMkF,MAA3D,0BAGJ,wBAAI3G,UAAU,yBAAyB4B,QAAS,kBAAM,EAAK4E,cAAcxI,EAAQyB,qBAC7E,uBAAGO,UAAU,uBAAb,IAAoC,kBAAC,IAAD,CAAiByB,KAAMmF,MAA3D,8B,GAjC1BzG,aAiDXC,eAAQ,KAAM,CAACqG,cjBZD,SAAAnF,GAAE,8CAAI,WAAMpD,GAAN,SAAAC,EAAA,0DAE5B2C,OAAO2D,QAAQ,sCAFa,gCAGrBrG,IAAMsG,OAAN,uBAA6BpD,IAHR,OAI3BpD,EAAS,CACLK,KDhDkB,iBCiDlBC,QAAS8C,IANc,2CAAJ,wDiBYhBlB,CAAgCmG,IC7ChCM,GAVa,WACxB,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAMvF,GAAG,cAAcvB,UAAU,uBAAjC,sBCCN+G,G,4LAGEhH,KAAKlB,MAAMF,cACXoB,KAAKlB,MAAMmI,gB,+BAGL,IAEChF,EAAYjC,KAAKlB,MAAMb,QAAvBgE,SAEP,OACI,yBAAKhC,UAAU,YACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,yBAAd,YACI,6BACI,kBAAC,GAAD,MACJ,6BACJ,6BACCgC,EAAS6C,KAAI,SAAA7G,GAAO,OACb,kBAAC,GAAD,CAAa8G,IAAK9G,EAAQsD,GAAItD,QAASA,e,GAtB/CmC,aA2CTC,gBALU,SAAAZ,GAAK,MAAK,CAC9BxB,QAAUwB,EAAMxB,QAChB6B,OAASL,EAAMK,UAGoB,CAACmH,YnB/Bd,yDAAM,WAAM9I,GAAN,eAAAC,EAAA,sEACXC,IAAMuF,IAAI,iBADC,OACvBC,EADuB,OAE7B1F,EAAS,CACLK,KDrBoB,eCsBpBC,QAASoF,EAAIlF,OAJY,2CAAN,uDmB+B2BC,eAAvCyB,CAAqD2G,IC1C9DE,G,YAEF,WAAYpI,GAAQ,IAAD,uBACf,4CAAMA,KAoDVC,SAAW,SAAAC,GACP,EAAKC,SAAL,eAAgBD,EAAME,OAAOC,KAAQH,EAAME,OAAOE,SAtDnC,EAyDnBC,SAAW,SAAAL,GACPA,EAAMM,iBAEN,IAAM6H,EAAc,CAChB5F,GAAK,EAAK9B,MAAM8B,GAChB+C,QAAU,EAAK7E,MAAM6E,QACrBC,mBAAqB,EAAK9E,MAAM8E,mBAChCc,OAAS,EAAK5F,MAAM4F,OACpBhB,SAAW,EAAK5E,MAAM4E,SACtBgC,QAAU,EAAK5G,MAAM4G,SATT,EAYG,EAAKvH,MAAM0E,MAAMC,OAA7BlC,EAZS,EAYTA,GAAI6F,EAZK,EAYLA,KACX,EAAKtI,MAAMuI,kBAAkB9F,EAAI6F,EAAMD,EAAa,EAAKrI,MAAMZ,UAtEhD,IAGPqD,EAAO,EAAKzC,MAAM0E,MAAMC,OAAxBlC,GAHO,OAKf,EAAK9B,MAAQ,CACT8B,GAAG,GACL+C,QAAS,GACTC,mBAAoB,GACpBc,OAAQ,GACRhB,SAAU,EACVgC,QAAS,KACT3G,kBAAmB6B,EACnBzB,OAAQ,IAbK,E,iFAiBC,IAAD,EACIE,KAAKlB,MAAM0E,MAAMC,OAA7BlC,EADQ,EACRA,GAAI6F,EADI,EACJA,KACXpH,KAAKlB,MAAMwI,eAAe/F,EAAI6F,K,6CAI9BpH,KAAKlB,MAAMF,gB,gDAGWmB,GAAY,IAAD,EAS7BA,EAAUoC,YANVZ,EAH6B,EAG7BA,GACA+C,EAJ6B,EAI7BA,QACAC,EAL6B,EAK7BA,mBACAc,EAN6B,EAM7BA,OACAhB,EAP6B,EAO7BA,SACAgC,EAR6B,EAQ7BA,QAGJrG,KAAKf,SAAS,CACVsC,KACA+C,UACAC,qBACAc,SACAhB,WACAgC,YAGDtG,EAAUD,QACTE,KAAKf,SAAS,CAACa,OAASC,EAAUD,W,+BA2BhC,IAAD,EAE+BE,KAAKP,MAAlCC,EAFF,EAEEA,kBAAmBI,EAFrB,EAEqBA,OAE1B,OACI,yBAAKG,UAAU,WACnB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMuB,GAAE,wBAAmB9B,GAAqBO,UAAU,iBAA1D,yBAGA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAMZ,SAAUW,KAAKX,UACnB,yBAAKY,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAWC,IAAW,gCAAiC,CACnD,aAAeJ,EAAOwE,UAE1BnF,KAAK,UACLgB,YAAY,uBACZf,MAAOY,KAAKP,MAAM6E,QAClBvF,SAAUiB,KAAKjB,WAEhBe,EAAOwE,SACN,yBAAKrE,UAAU,oBAAoBH,EAAOwE,UAG9C,yBAAKrE,UAAU,cACb,8BACEA,UAAU,+BACVE,YAAY,sBACZhB,KAAK,qBACLC,MAAOY,KAAKP,MAAM8E,mBAClBxF,SAAUiB,KAAKjB,YAGnB,wCACA,yBAAKkB,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAU,+BACVd,KAAK,UACLC,MAAOY,KAAKP,MAAM4G,SAAW,GAC7BtH,SAAUiB,KAAKjB,YAGnB,yBAAKkB,UAAU,cACb,4BACEA,UAAU,+BACVd,KAAK,WACLC,MAAOY,KAAKP,MAAM4E,SAClBtF,SAAUiB,KAAKjB,UAEf,4BAAQK,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKa,UAAU,cACb,4BACEA,UAAU,+BACVd,KAAK,SACLC,MAAOY,KAAKP,MAAM4F,OAClBtG,SAAUiB,KAAKjB,UAEf,4BAAQK,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACEZ,KAAK,SACLyB,UAAU,4C,GA3JIG,aAmLjBC,gBALS,SAAAZ,GAAK,MAAK,CAC9B0C,YAAc1C,EAAM+C,QAAQL,YAC5BrC,OAASL,EAAMK,UAGqB,CAACwH,ePrJX,SAAC9C,EAAYC,GAAb,8CAAuC,WAAMtG,GAAN,eAAAC,EAAA,+EAG3CC,IAAMuF,IAAN,uBAA0BY,EAA1B,YAAwCC,IAHG,OAGvDZ,EAHuD,OAI7D1F,EAAS,CACLK,KdpCoB,mBcqCpBC,QAAUoF,EAAIlF,OAN2C,gDAS7DR,EAAS,CACLK,KAAOT,EACPU,QAAU,KAAIC,SAASC,OAXkC,yDAAvC,uDOqJ2B0I,kBPpIxB,SAAC7C,EAAYC,EAAuB8C,EAAoBrJ,GAAxD,8CAAoE,WAAMC,GAAN,SAAAC,EAAA,+EAI3EC,IAAMmJ,MAAN,uBAA4BhD,EAA5B,YAA0CC,GAAyB8C,GAJQ,cAK7FrJ,EAAQK,KAAR,wBAA8BiG,IAC9BrG,EAAS,CACLK,KAAOT,EACPU,QAAU,KAR+E,gDAW7FN,EAAS,CACLK,KAAOT,EACPU,QAAU,KAAIC,SAASC,OAbkE,yDAApE,uDOoI2CC,eAA7DyB,CAA4E6G,ICtLrFO,G,4LAGKzH,KAAKlB,MAAMqC,SAASC,YACnBpB,KAAKlB,MAAMZ,QAAQK,KAAK,gB,+BAK5B,OACE,yBAAK0B,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,2BACA,uBAAGA,UAAU,QAAb,gEAIA,6BACA,kBAAC,IAAD,CAAMuB,GAAG,YAAYvB,UAAU,+BAA/B,WAGA,kBAAC,IAAD,CAAMuB,GAAG,SAASvB,UAAU,iCAA5B,kB,GAxBEG,aA4CPC,gBAJS,SAAAZ,GAAK,MAAK,CAC9B0B,SAAW1B,EAAM0B,YAGmB,GAAzBd,CAA8BoH,IC3CvCC,G,YACJ,WAAY5I,GAAQ,IAAD,8BACjB,4CAAMA,KAWRC,SAAW,SAAAC,GACT,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAbjC,EAgBnBC,SAAW,SAAAL,GACTA,EAAMM,iBAEN,IAAMqI,EAAU,CACdC,SAAU,EAAKnI,MAAMmI,SACrBhG,SAAU,EAAKnC,MAAMmC,SACrBiG,SAAU,EAAKpI,MAAMoI,SACrBC,gBAAiB,EAAKrI,MAAMqI,iBAG9B,EAAKhJ,MAAMiJ,cAAcJ,EAAS,EAAK7I,MAAMZ,UAvB7C,EAAKuB,MAAQ,CACXmI,SAAU,GACVhG,SAAU,GACViG,SAAU,GACVC,gBAAiB,GACjBhI,OAAQ,IARO,E,iFA8BdE,KAAKlB,MAAMqC,SAASC,YACnBpB,KAAKlB,MAAMZ,QAAQK,KAAK,gB,gDAIJwB,GACpBA,EAAUD,QACZE,KAAKf,SAAS,CAAEa,OAAQC,EAAUD,W,+BAI5B,IACAA,EAAWE,KAAKP,MAAhBK,OACR,OACE,yBAAKG,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAMZ,SAAUW,KAAKX,UACnB,yBAAKY,UAAU,cACb,2BACEzB,KAAK,OACLyB,UAAWC,IAAW,gCAAiC,CACrD,aAAcJ,EAAO8B,WAEvBzB,YAAY,OACZhB,KAAK,WACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMmC,WAEnB9B,EAAO8B,UACN,yBAAK3B,UAAU,oBAAf,IAAoCH,EAAO8B,SAA3C,MAGJ,yBAAK3B,UAAU,cACb,2BACEzB,KAAK,QACLyB,UAAWC,IAAW,gCAAiC,CACrD,aAAcJ,EAAO8H,WAEvBzH,YAAY,gBACZhB,KAAK,WACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMmI,WAEnB9H,EAAO8H,UACN,yBAAK3H,UAAU,oBAAf,IAAoCH,EAAO8H,SAA3C,MAGJ,yBAAK3H,UAAU,cACb,2BACEzB,KAAK,WACLyB,UAAWC,IAAW,gCAAiC,CACrD,aAAcJ,EAAO+H,WAEvB1H,YAAY,WACZhB,KAAK,WACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMoI,WAEnB/H,EAAO+H,UACN,yBAAK5H,UAAU,oBAAf,IAAoCH,EAAO+H,SAA3C,MAGJ,yBAAK5H,UAAU,cACb,2BACEzB,KAAK,WACLyB,UAAWC,IAAW,gCAAiC,CACrD,aAAcJ,EAAOgI,kBAEvB3H,YAAY,mBACZhB,KAAK,kBACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMqI,kBAEnBhI,EAAOgI,iBACN,yBAAK7H,UAAU,oBACZ,IACAH,EAAOgI,gBAAiB,MAI/B,2BAAOtJ,KAAK,SAASyB,UAAU,4C,GAnHxBG,aAwIRC,gBALS,SAAAZ,GAAK,MAAK,CAChCK,OAAQL,EAAMK,OACdqB,SAAW1B,EAAM0B,YAKjB,CAAE4G,cnB3IyB,SAACJ,EAASzJ,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAGrCC,IAAMC,KAAK,sBAAuBqJ,GAHG,OAI3CzJ,EAAQK,KAAK,UACbJ,EAAS,CACLK,KAAOT,EACPU,QAAU,KAP6B,gDAU3CN,EAAS,CACLK,KAAOT,EACPU,QAAU,KAAIC,SAASC,OAZgB,yDAAtB,wDmById0B,CAGbqH,IC3IIM,G,YACJ,WAAYlJ,GAAQ,IAAD,8BACjB,4CAAMA,KAwBRC,SAAW,SAAAC,GACT,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SA1BjC,EA6BnBC,SAAW,SAAAL,GACTA,EAAMM,iBACN,IAAM2I,EAAe,CACnBL,SAAU,EAAKnI,MAAMmI,SACrBC,SAAU,EAAKpI,MAAMoI,UAGvB,EAAK/I,MAAMoJ,MAAMD,IAjCjB,EAAKxI,MAAQ,CACXmI,SAAU,GACVC,SAAU,GACV/H,OAAQ,IANO,E,iFAWZE,KAAKlB,MAAMqC,SAASC,YACnBpB,KAAKlB,MAAMZ,QAAQK,KAAK,gB,gDAINwB,GACpBA,EAAUD,QACZE,KAAKf,SAAS,CAAEa,OAAQC,EAAUD,SAEhCC,EAAUoB,SAASC,YACrBpB,KAAKlB,MAAMZ,QAAQK,KAAK,gB,+BAkBlB,IACAuB,EAAWE,KAAKP,MAAhBK,OAER,OACE,yBAAKG,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,0BAAMZ,SAAUW,KAAKX,UACnB,yBAAKY,UAAU,cACb,2BACEzB,KAAK,QACLyB,UAAWC,IAAW,+BAAgC,CACpD,aAAcJ,EAAO8H,WAEvBzH,YAAY,gBACZhB,KAAK,WACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMmI,WAEnB9H,EAAO8H,UACN,yBAAK3H,UAAU,oBAAf,IAAoCH,EAAO8H,SAA3C,MAGJ,yBAAK3H,UAAU,cACb,2BACEzB,KAAK,WACLyB,UAAWC,IAAW,+BAAgC,CACpD,aAAcJ,EAAO+H,WAEvB1H,YAAY,WACZhB,KAAK,WACLJ,SAAUiB,KAAKjB,SACfK,MAAOY,KAAKP,MAAMoI,WAEnB/H,EAAO+H,UACN,yBAAK5H,UAAU,oBAAf,IAAoCH,EAAO+H,SAA3C,MAGJ,2BAAOrJ,KAAK,SAASyB,UAAU,4C,GAhF3BG,aAqGLC,gBALS,SAAAZ,GAAK,MAAK,CAChCK,OAAQL,EAAMK,OACdqB,SAAU1B,EAAM0B,YAKhB,CAAE+G,MpBvFiB,SAACC,GAAD,8CAAkB,WAAMhK,GAAN,mBAAAC,EAAA,+EAIbC,IAAMC,KAAK,mBAAoB6J,GAJlB,OAIzBtE,EAJyB,OAMxBtD,EAASsD,EAAIlF,KAAb4B,MAEPK,aAAawH,QAAQ,WAAY7H,GAEjCD,EAAYC,GAEN8H,EAAUC,IAAW/H,GAE3BpC,EAAS,CACLK,KJ1BoB,oBI2BpBC,QAAU4J,IAhBiB,kDAmB/BlK,EAAS,CACLK,KAAOT,EACPU,QAAU,KAAIC,SAASC,OArBI,0DAAlB,wDoBqFN0B,CAGb2H,I,SCpFa3H,gBAJS,SAAAZ,GAAK,MAAK,CAC9B0B,SAAW1B,EAAM0B,YAGNd,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAGmI,UAAsBpH,EAAzB,EAAyBA,SAAaqH,EAAtC,gDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA3J,GAAK,OACa,IAAxBqC,EAASC,WACP,kBAAChB,EAActB,GAEf,kBAAC,IAAD,CAAU0C,GAAG,kBCWfkH,GAAW9H,aAAa8H,SAE1B,GADAC,QAAQC,IAAI,iBACTF,GAAS,CACVpI,EAAYoI,IAEZ,IAAMG,GAAeP,IAAWI,IAEhC5F,EAAM3E,SAAS,CACbK,K1BpBwB,oB0BqBxBC,QAAUoK,KAGZ,IAAMC,GAAcC,KAAKC,MAAM,IAE5BH,GAAaI,IAAMH,KAGpBhG,EAAM3E,SAASwC,KACfI,OAAOC,SAASC,KAAO,K,IAwChBiI,G,iLA/Bb,OACE,kBAAC,IAAMnC,SAAP,KACA,kBAAC,IAAD,CAAUjE,MAAOA,GACjB,kBAAC,IAAD,KACE,yBAAK7C,UAAU,OACb,kBAAC,EAAD,MAIA,kBAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,IAAIb,UAAWd,KACjC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,YAAYb,UAAWb,KACzC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,SAASb,UAAWP,KAItC,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcmB,OAAK,EAACC,KAAK,aAAab,UAAWvB,KACjD,kBAAC,GAAD,CAAcmC,OAAK,EAACC,KAAK,cAAcb,UAAW1J,IAClD,kBAAC,GAAD,CAAcsK,OAAK,EAACC,KAAK,qBAAqBb,UAAWjF,KACzD,kBAAC,GAAD,CAAc6F,OAAK,EAACC,KAAK,oBAAoBb,UAAWjD,KACxD,kBAAC,GAAD,CAAc6D,OAAK,EAACC,KAAK,sBAAsBb,UAAWpC,KAC1D,kBAAC,GAAD,CAAcgD,OAAK,EAACC,KAAK,+BAA+Bb,UAAWrB,c,GAzB3D9G,aClCEiJ,QACW,cAA7BtI,OAAOC,SAASsI,UAEe,UAA7BvI,OAAOC,SAASsI,UAEhBvI,OAAOC,SAASsI,SAAS9F,MACvB,2DCZN+F,IAASd,OAAO,kBAAC,GAAD,MAASe,SAASC,eAAe,SD2H3C,kBAAmB1G,WACrBA,UAAU2G,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2348a1f9.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK \";\r\n\r\n//Security\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER \";","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"./types\"\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try{\r\n        await axios.post(\"/api/project/\", project);\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    }catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/\");\r\n    dispatch({\r\n        type : GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch({\r\n            type : GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const clearErrors = () => dispatch => {\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n    })\r\n}\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n\r\n    if(window.confirm(\"Do you want to delete the project?\")){\r\n        await axios.delete(`/api/project/${id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames'\r\n\r\nclass AddProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  //Life cycle hooks\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors})\r\n    }\r\n  }\r\n  \r\n\r\n  onChange = (event) => {\r\n      this.setState({ [event.target.name] : event.target.value });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newProject = {\r\n        projectName: this.state.projectName,\r\n        projectIdentifier: this.state.projectIdentifier,\r\n        description: this.state.description,\r\n        start_date: this.state.start_date,\r\n        end_date: this.state.end_date\r\n      }\r\n      this.props.createProject(newProject, this.props.history)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {errors} = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Project Name\"\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Unique Project ID\"\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.start_date}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.end_date}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors : state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProject }) (AddProject);\r\n","import axios from \"axios\"\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken  from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n\r\n    try{\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : {}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (LoginRequest) => async dispatch => {\r\n\r\n    try {\r\n        //post login request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);        \r\n        //extract token from res.data\r\n        const {token} = res.data;\r\n        //store the token\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        //set token in the header\r\n        setJWTToken(token);\r\n        //decode token\r\n        const decoded = jwt_decode(token);\r\n        //dispatch to security reducer\r\n        dispatch({\r\n            type : SET_CURRENT_USER,\r\n            payload : decoded\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        }) \r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type : SET_CURRENT_USER,\r\n        payload : {}\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../actions/securityActions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\n \r\nclass Header extends Component {\r\n\r\n    logout = () => {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const {validToken, user} = this.props.security;\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            \r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link \" to=\"/register\">\r\n                  Sign in\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link \" to=\"/dashboard\">\r\n                 {<FontAwesomeIcon icon={faUserCircle}/>\r\n                 }\r\n                  {` ${user.fullname}`}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link onClick={this.logout} className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )\r\n\r\n        let headerLinks;\r\n\r\n        if(validToken && user){\r\n            headerLinks = userIsAuthenticated\r\n        }else{\r\n            headerLinks = userIsNotAuthenticated\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n              <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                  Project Management Tool\r\n                </Link>\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#mobile-nav\"\r\n                >\r\n                  <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n\r\n                {headerLinks}\r\n\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout : PropTypes.func.isRequired,\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (Header);","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch (action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter( project => project.projectIdentifier !== action.payload )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projectTasks : [],\r\n    projectTask : {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch (action.type){\r\n\r\n        case GET_BACKLOG:\r\n        return {\r\n            ...state,\r\n            projectTasks : action.payload\r\n        }\r\n\r\n        case GET_PROJECT_TASK:\r\n        return {\r\n            ...state,\r\n            projectTask : action.payload\r\n        }\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTasks : state.projectTasks.filter(projectTask => projectTask.projectSequence !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user : {},\r\n    validToken : false\r\n}\r\n\r\nconst checkValidToken = (payload) => {\r\n    if(payload){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken : checkValidToken(action.payload),\r\n                user : action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n    errors : errorReducer,\r\n    project : projectReducer,\r\n    backlog : backlogReducer,\r\n    security : securityReducer\r\n});","import {createStore,  applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    )\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware)\r\n        )\r\n    )\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames'\r\n\r\n\r\nclass UpdateProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id : \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    //console.log(id);\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors});\r\n    }\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name] : event.target.value });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n      event.preventDefault();\r\n      const updatedProject = {\r\n        id : this.state.id,\r\n        projectName : this.state.projectName,\r\n        projectIdentifier : this.state.projectIdentifier,\r\n        description : this.state.description,\r\n        start_date : this.state.start_date,\r\n        end_date : this.state.end_date\r\n      }\r\n      this.props.createProject(updatedProject, this.props.history)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { errors } = this.state;\r\n    return (\r\n      \r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\" : errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\"\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProjectTask extends Component {\r\n\r\n  onDeleteButtonClick = (backlogId, projectTaskSequence) => {\r\n      this.props.deleteProjectTask(backlogId, projectTaskSequence);\r\n    }\r\n\r\n    render() {\r\n        const { projectTask } = this.props\r\n\r\n        let priorityString;\r\n        let priorityClassName;\r\n\r\n        if(projectTask.priority === 1){\r\n          priorityClassName = \"bg-danger text-light\";\r\n          priorityString = \"HIGH\";\r\n        }\r\n\r\n        if(projectTask.priority === 2){\r\n          priorityClassName = \"bg-warning text-light\";\r\n          priorityString = \"MEDIUM\";\r\n        }\r\n\r\n        if(projectTask.priority === 3){\r\n          priorityClassName = \"bg-info text-light\";\r\n          priorityString = \"LOW\";\r\n        }\r\n\r\n        return (\r\n              <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClassName}`}>\r\n                  ID: {projectTask.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                  <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n                  <p className=\"card-text text-truncate \">\r\n                    {projectTask.acceptanceCriteria}\r\n                  </p>\r\n                  <Link to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`} className=\"btn btn-primary\">\r\n                    View / Update\r\n                  </Link>\r\n                  <button className=\"btn btn-danger ml-4\" onClick={() => this.onDeleteButtonClick(projectTask.projectIdentifier, projectTask.projectSequence)}>Delete</button>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProjectTask}) (ProjectTask);","import axios from 'axios';\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, UP, DELETE_PROJECT_TASK } from './types'\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch =>{\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const getBacklog = (backlog_id) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type : GET_BACKLOG,\r\n            payload : res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, project_task_sequence) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${project_task_sequence}`);\r\n        dispatch({\r\n            type : GET_PROJECT_TASK,\r\n            payload : res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, project_task_sequence, updatedProjectTask, history) => async dispatch => {\r\n\r\n    try {\r\n        \r\n        const res = await axios.patch(`/api/backlog/${backlog_id}/${project_task_sequence}`, updatedProjectTask);\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, project_task_sequence) => async dispatch => {\r\n\r\n    if(window.confirm(`Do you want to delete the project task ${project_task_sequence}?, this action cannot be undone`)){\r\n        try {\r\n            await axios.delete(`/api/backlog/${backlog_id}/${project_task_sequence}`);\r\n            dispatch({\r\n                type : DELETE_PROJECT_TASK,\r\n                payload : project_task_sequence\r\n            })\r\n        } catch (err) {\r\n            \r\n        }    \r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const {projectTasks} = this.props;\r\n        const tasks = projectTasks.map(projectTask => (\r\n            <ProjectTask key={projectTask.id} projectTask={projectTask}/>\r\n        ));\r\n\r\n        let toDoItems = []\r\n        let inProgressItems = []\r\n        let doneItems = []\r\n            //console.log(tasks)\r\n        for(let i = 0; i < tasks.length; i++){\r\n            if(tasks[i].props.projectTask.status === \"TO_DO\" ){\r\n                toDoItems.push(tasks[i])\r\n            }\r\n            if(tasks[i].props.projectTask.status === \"IN_PROGRESS\" ){\r\n                inProgressItems.push(tasks[i])\r\n            }\r\n            if(tasks[i].props.projectTask.status === \"DONE\" ){\r\n                doneItems.push(tasks[i])\r\n            }\r\n        }\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-secondary text-white\">\r\n                    <h3>TO DO</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                    toDoItems\r\n                }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-primary text-white\">\r\n                    <h3>In Progress</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  inProgressItems\r\n                }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-success text-white\">\r\n                    <h3>Done</h3>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  doneItems\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backlog; ","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             errors : {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProp){\r\n        if(nextProp.errors){\r\n            this.setState({errors : nextProp.errors});\r\n        }\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.props.getBacklog(id)\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {projectTasks} = this.props.backlog;\r\n        const {errors} = this.state;\r\n\r\n        let BoardContent;\r\n        \r\n        const boardValidator = (errors, projectTasks) => {\r\n            if(projectTasks.length < 1){\r\n                if(errors.projectNotFound){\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    )\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                            No tasks created for this project\r\n                        </div>\r\n                    )\r\n                }\r\n            } else {\r\n                return (\r\n                    <Backlog projectTasks={projectTasks}/>\r\n                )\r\n            }\r\n        }\r\n\r\n        BoardContent = boardValidator(errors, projectTasks)\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n              <i className=\"cool-text\"> <FontAwesomeIcon icon={faPlusCircle} /> Create Project Task</i>\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {BoardContent}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.protoTypes = {\r\n    backlog : PropTypes.object.isRequired,\r\n    getBacklog : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog : state.backlog,\r\n    errors : state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBacklog}) (ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames'\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      //console.log(nextProps.errors)\r\n      if(nextProps.errors){\r\n        this.setState({errors : nextProps.errors});\r\n      }\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    //console.log(newTask)\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    \r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\" : errors.summary\r\n                      })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProp,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport '../../App.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFlagCheckered, faEdit, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ProjectItem extends Component {\r\n    \r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    render() {\r\n        const {project} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                            <div className=\"card card-body bg-light mb-3\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-2\">\r\n                                        <span className=\"mx-auto pid\">{project.projectIdentifier}</span>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                                        <h3>{project.projectName}</h3>\r\n                                        <p className=\"cool-text\">{project.description}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 d-none d-lg-block\">\r\n                                        <ul className=\"list-group\">\r\n                                            <Link to={`/projectBoard/${ project.projectIdentifier }`}>\r\n                                                <li className=\"list-group-item board\">\r\n                                                    <i className=\"cool-text bold-text\"> <FontAwesomeIcon icon={faFlagCheckered}/> Project Board </i>\r\n                                                </li>\r\n                                            </Link>\r\n                                            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                                <li className=\"list-group-item update\">\r\n                                                    <i className=\"cool-text bold-text\"> <FontAwesomeIcon icon={faEdit}/> Update Project Info</i>\r\n                                                </li>\r\n                                            </Link>\r\n                                                <li className=\"list-group-item delete\" onClick={() => this.onDeleteClick(project.projectIdentifier)}>\r\n                                                    <i className=\"cool-text bold-text\"> <FontAwesomeIcon icon={faMinusCircle}/> Delete Project</i>\r\n                                                </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject}) (ProjectItem);","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to='/addProject' className=\"btn btn-lg btn-info\">\r\n            Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem'\r\nimport CreateProjectButton from './Project/CreateProjectButton'\r\nimport {connect} from \"react-redux\";\r\nimport { getProjects, clearErrors } from \"../actions/projectActions\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.clearErrors();\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {projects} = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                                <CreateProjectButton/>\r\n                            <br />\r\n                        <hr />\r\n                        {projects.map(project => (\r\n                                <ProjectItem key={project.id} project={project} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project : PropTypes.object.isRequired,\r\n    getProjects : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\n\r\n const mapStateToProps = state => ({\r\n     project : state.project,\r\n     errors : state.errors\r\n })\r\n\r\nexport default connect(mapStateToProps, {getProjects, clearErrors})(Dashboard);","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport classnames from 'classnames'\r\nimport { connect } from \"react-redux\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport { clearErrors } from \"../../../actions/projectActions\";\r\nimport  PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const { id } = this.props.match.params;\r\n    \r\n        this.state = {\r\n            id:\"\",\r\n          summary: \"\",\r\n          acceptanceCriteria: \"\",\r\n          status: \"\",\r\n          priority: 0,\r\n          dueDate: null,\r\n          projectIdentifier: id,\r\n          errors: {}\r\n        };\r\n      }\r\n\r\n    componentDidMount(){\r\n        const {id, ptId} = this.props.match.params;\r\n        this.props.getProjectTask(id, ptId);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        const {\r\n            id, \r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n        } = nextProps.projectTask;\r\n\r\n        this.setState({\r\n            id,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n        })\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors : nextProps.errors})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const updatedTask = {\r\n            id : this.state.id,\r\n            summary : this.state.summary,\r\n            acceptanceCriteria : this.state.acceptanceCriteria,\r\n            status : this.state.status,\r\n            priority : this.state.priority,\r\n            dueDate : this.state.dueDate, \r\n        }\r\n\r\n        const {id, ptId} = this.props.match.params;\r\n        this.props.updateProjectTask(id, ptId, updatedTask, this.props.history)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {projectIdentifier, errors} = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${projectIdentifier}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\" : errors.summary\r\n                      })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate || ''}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    projectTask : PropTypes.object.isRequired,\r\n    getProjectTask : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired,\r\n    updateProjectTask : PropTypes.func.isRequired,\r\n    clearErrors : PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projectTask : state.backlog.projectTask,\r\n    errors : state.errors    \r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask, clearErrors}) (UpdateProjectTask); ","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                    <p className=\"lead\">\r\n                      Create your account to join active projects or start you\r\n                      own\r\n                    </p>\r\n                    <hr />\r\n                    <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                      Sign Up\r\n                    </Link>\r\n                    <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                      Login\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {}) (Landing);","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n        this.props.history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullname\r\n                    })}\r\n                    placeholder=\"Name\"\r\n                    name=\"fullname\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.fullname}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\"> {errors.fullname} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\"> {errors.username} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\"> {errors.password} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.confirmPassword}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {\" \"}\r\n                      {errors.confirmPassword}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  createNewUser: PropTypes.func.isRequired,\r\n  security : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security : state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n      if(this.props.security.validToken){\r\n          this.props.history.push(\"/dashboard\");\r\n      }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\"> {errors.username} </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\"> {errors.password} </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\nexport default connect(mapStateToProps) (SecuredRoute);","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport AddProject from './Components/Project/AddProject';\nimport Header from './Components/Layout/Header';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './Components/Project/UpdateProject';\nimport ProjectBoard from \"./Components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from './Components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport Dashboard from './Components/Dashboard';\nimport UpdateProjectTask from './Components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './Components/Layout/Landing';\nimport Register from './Components/Authentication/Register';\nimport Login from './Components/Authentication/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\n\nconst jwtToken = localStorage.jwtToken;\n    console.log(\"wiilll update\")\n    if(jwtToken){\n      setJWTToken(jwtToken);\n      \n      const decodedToken = jwt_decode(jwtToken);\n      //console.log(decodedToken)\n      store.dispatch({\n        type : SET_CURRENT_USER,\n        payload : decodedToken\n      });\n    \n      const currentTime = Date.now()/1000;\n      //once token is expired\n      if(decodedToken.exp < currentTime){\n        //handle logout\n        //console.log(\"logout\")\n        store.dispatch(logout())\n        window.location.href = \"/\";\n      }\n    \n    }\n\nclass App extends Component {\n\n\n  render(){\n  return (\n    <React.Fragment>\n    <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        {\n          //Public routes\n        }\n        <Route exact path='/' component={Landing}/>\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/login\" component={Login}/>\n        {\n          //Private routes\n        }\n        <Switch>\n          <SecuredRoute exact path='/dashboard' component={Dashboard} />\n          <SecuredRoute exact path='/addProject' component={AddProject} />\n          <SecuredRoute exact path='/updateProject/:id' component={UpdateProject} />\n          <SecuredRoute exact path='/projectBoard/:id' component={ProjectBoard} />\n          <SecuredRoute exact path='/addProjectTask/:id' component={AddProjectTask}/>\n          <SecuredRoute exact path='/updateProjectTask/:id/:ptId' component={UpdateProjectTask}/>\n        </Switch>\n      </div>\n    </Router>\n    </Provider>\n    </React.Fragment>\n  );\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}